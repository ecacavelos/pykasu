
package py.com.cbi.pykasu.web.ws.cuentas;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

import py.com.roshka.pykasu.util.Globals;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * ws_tri_sal service = new ws_tri_sal();
 * WsTriSalSoapPort portType = service.getWsTriSalSoapPort();
 * portType.execute(...);
 * </pre>
 * 
 * </p>
 * 
 */
//@WebServiceClient(name = "ws_tri_sal", targetNamespace = "services", wsdlLocation = "/Users/esteban/Desktop/cuentas.wsdl")
@WebServiceClient(name = "ws_tri_sal", targetNamespace = "services", wsdlLocation = "http://research01:8180/tributos_web/servlet/srv.aws_tri_sal?wsdl")
public class WsTriSal extends Service {
	
	
	private final static URL WSTRISAL_WSDL_LOCATION;
	private final static Logger logger = Logger
			.getLogger(py.com.cbi.pykasu.web.ws.cuentas.WsTriSal.class
					.getName());

	
	
	static {
		Properties properties = new Properties();
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = py.com.cbi.pykasu.web.ws.cuentas.WsTriSal.class.getResource(".");
			URL url_properties = new URL(py.com.roshka.pykasu.util.Globals.PYKASU_PROPERTIES);
			 properties.load(url_properties.openStream());
			url = new URL(properties.getProperty("WS_CONSULTA_CUENTAS"));
//					"/Users/esteban/Desktop/cuentas.wsdl");
		} catch (MalformedURLException e) {
			logger.warning("Failed to create URL for the wsdl Location: 'xxxxx', retrying as a local file");
			logger.warning(e.getMessage());
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		WSTRISAL_WSDL_LOCATION = url;
	}

	public WsTriSal(URL wsdlLocation, QName serviceName) {
//		super(wsdlLocation, serviceName);
		super(wsdlLocation, serviceName = new QName("services", "ws_tri_sal"));
	}

	public WsTriSal() {
		super(WSTRISAL_WSDL_LOCATION, new QName("services", "ws_tri_sal"));
//		super(WSTRISAL_WSDL_LOCATION, serviceName);

	}

	/**
	 * 
	 * @return returns WsTriSalSoapPort
	 */
	@WebEndpoint(name = "ws_tri_salSoapPort")
	public WsTriSalSoapPort getWsTriSalSoapPort() {
		return super.getPort(new QName("services", "ws_tri_salSoapPort"),
				WsTriSalSoapPort.class);
	}

}
